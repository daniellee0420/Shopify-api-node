// Generated by CoffeeScript 1.10.0
(function() {
  var Base, GiftCard, pluralize,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  pluralize = require('pluralize');

  GiftCard = (function(superClass) {
    extend(GiftCard, superClass);

    GiftCard.prototype.slug = 'gift_card';

    GiftCard.prototype.prefix = '/gift_cards';

    function GiftCard(site) {
      GiftCard.__super__.constructor.call(this, site);
    }

    GiftCard.prototype.getAll = function(callback) {
      return this.all(callback);
    };

    GiftCard.prototype.getByStatus = function(status, callback) {
      return this.all({
        status: status
      }, callback);
    };

    GiftCard.prototype.getCount = function(callback) {
      return this.count(void 0, callback);
    };

    GiftCard.prototype.getCountByStatus = function(status, callback) {
      return this.count({
        status: status
      }, callback);
    };

    GiftCard.prototype.search = function(queryStr, callback) {
      var query, url;
      query = {
        query: queryStr
      };
      url = this.resource.queryString(this.prefix + "/search", query);
      return this.resource.get(url, pluralize(this.slug), callback);
    };

    GiftCard.prototype.disable = function(id, callback) {
      var params, url;
      url = this.resource.queryString(this.prefix + "/" + id + "/disable");
      params = {
        id: id
      };
      return this.resource.post(url, this.slug, params, callback);
    };

    return GiftCard;

  })(Base);

  module.exports = GiftCard;

}).call(this);
